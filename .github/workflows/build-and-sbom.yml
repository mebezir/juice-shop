name: Build Docker Image, Generate SBOM, and Run SAST

on:
  push:
    branches:
      - master  # Ana branch "master" olarak gÃ¼ncellendi
  pull_request:
    branches:
      - master

jobs:
  build-and-sbom:
    name: Build Docker Image and Generate SBOM
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          docker build -t mebezir-juice-shop .

      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM with Syft
        run: |
          syft docker:mebezir-juice-shop -o cyclonedx-json > sbom.json

      - name: Upload SBOM Artifact
        uses: actions/upload-artifact@v4
        with:
          name: juice-shop-sbom
          path: sbom.json

  semgrep-sast:
    name: Run Semgrep SAST Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Semgrep
        run: |
          python3 -m pip install --upgrade pip
          pip install semgrep

      - name: Run Semgrep SAST Scan
        run: |
          semgrep scan --config auto --sarif --output semgrep-results.sarif

      - name: Upload Semgrep SARIF Artifact
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-sarif
          path: semgrep-results.sarif


  gitleaks:
    name: Run GitLeaks for Sensitive Data
    runs-on: ubuntu-latest
    needs: [build-and-sbom, semgrep-sast]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install GitLeaks
        run: |
          curl -sL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o /usr/local/bin/gitleaks
          chmod +x /usr/local/bin/gitleaks

      - name: Run GitLeaks Scan with SARIF output
        run: |
          gitleaks detect --source . --report-format sarif --report-path gitleaks-results.sarif --exit-code 1 || true

      - name: Upload GitLeaks SARIF Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-sarif
          path: gitleaks-results.sarif
  dummy-deploy:
    name: Dummy Deploy
    runs-on: ubuntu-latest
    needs: [build-and-sbom, semgrep-sast, gitleaks]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dummy Deploy Step
        run: |
          echo "Deploying application..."
          sleep 5
          echo "Application deployed successfully!"

  zap-dast:
    name: ZAP DAST Scan
    runs-on: ubuntu-latest
    needs: [build-and-sbom, semgrep-sast, gitleaks, dummy-deploy]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run ZAP DAST scan on example.com
        uses: zaproxy/action-full-scan@v0.5.0
        with:
          target: 'http://example.com'
          rules: 'zap/rules.json'  # Optional custom rules file (if needed)

      - name: Upload ZAP Results
        uses: actions/upload-artifact@v4
        with:
          name: zap-dast-report
          path: zap/scan-report.html



